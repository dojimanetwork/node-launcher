apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dojima-blockscout-v2.fullname" . }}
  labels:
    {{- include "dojima-blockscout-v2.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "dojima-blockscout-v2.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "dojima-blockscout-v2.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "dojima-blockscout-v2.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          image: {{ include "dojima-blockscout-v2-blockscout.image" . }}
          imagePullPolicy: IfNotPresent
          resources:
            {{- toYaml .Values.resources.stats | nindent 12 }}
          ports:
            - name: bs-http
              containerPort: {{ .Values.service.bs }}
              protocol: TCP
          {{- with .Values.commands.blockscout.command }}
          command: {{ . | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.commands.blockscout.args }}
          args: {{ . | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: ENV
              value: {{ .Values.env.env | quote }}
            - name: RESOURCE_MODE
              value: {{ .Values.env.resource_mode  | quote }}
            - name: ETHEREUM_JSONRPC_WS_URL
              value: {{ .Values.env.eth_ws_url | quote}}
            - name: JSON_RPC
              value: {{ .Values.env.eth_json_http | quote }}
            - name: ETHEREUM_JSONRPC_VARIANT
              value: {{ .Values.env.eth_json_var }}
            - name: COIN
              value: {{ .Values.env.coin}}
            - name: CHAIN_ID
              value: "{{ .Values.env.chain_id }}"
            - name: SECRET_KEY_BASE
              value: "{{ .Values.env.secret_key }}"
            - name: ETHEREUM_JSONRPC_HTTP_URL
              value: {{ .Values.env.eth_json_http }}
            - name: DATABASE_URL
              value: {{ .Values.env.database_url }}
            - name: MIX_ENV
              value: {{ .Values.env.mix_env }}
            - name: ECTO_USE_SSL
              value: "{{ .Values.env.ecto_use_ssl }}"
            - name: PORT
              value: "{{ .Values.service.bs }}"
            - name: INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER
              value: "{{ .Values.env.indexer_dis_pending_fetcher}}"
            - name: INDEXER_DISABLE_INTERNAL_TRANSACTIONS_FETCHER
              value: "{{ .Values.env.indexer_dis_internal_tx_fetcher }}"
            - name: INDEXER_DISABLE_BLOCK_REWARD_FETCHER
              value: "{{ .Values.env.indexer_dis_block_rew_fetcher }}"
            - name: COIN_NAME
              value: {{ .Values.env.coin_name }}
            - name: DISABLE_EXCHANGE_RATES
              value: "{{ .Values.env.disable_exchange_rate }}"
            - name: LOGO
              value: "{{ .Values.env.logo }}"
            - name: LOGO_FOOTER
              value: "{{ .Values.env.logo_footer }}"
            - name: SUBNETWORK
              value: "{{ .Values.env.sub_network }}"
            - name: INDEXER_EMPTY_BLOCKS_SANITIZER_BATCH_SIZE
              value: "{{ .Values.env.indexer_empty_blocks_sanitize }}"
            - name: API_URL
              value: {{ .Values.env.api_url }}
            - name: BLOCKSCOUT_HOST
              value: {{ .Values.env.blockscout_host }}
            - name: ENABLE_RUST_VERIFICATION_SERVICE
              value: {{ .Values.env.enable_rs_verify_service | quote }}
            - name: RUST_VERIFICATION_SERVICE_URL
              value: {{ .Values.env.rs_verify_url }}
            - name: ACCOUNT_ENABLED
              value: {{ .Values.env.account_enabled | quote }}
            - name: SHOW_TESTNET_LABEL
              value: {{ .Values.env.show_testnet_label | quote }}
            - name: API_V2_ENABLED
              value: {{ .Values.env.api_v2_enable | quote }}
          {{- if .Values.readinessProbe.blockscout.enable }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.blockscout.path }}
              port: bs-http
              scheme: HTTP
              {{- with .Values.readinessProbe.blockscout.params }}
              {{- . | toYaml | nindent 12 }}
              {{- end }}
          {{- end }}
          {{- if .Values.livenessProbe.blockscout.enable }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.blockscout.path }}
              port: bs-http
              scheme: HTTP
              {{- with .Values.livenessProbe.blockscout.params }}
              {{- . | toYaml | nindent 12 }}
              {{- end }}
          {{- end }}
        - name: {{ .Chart.Name }}-frontend
          image: "{{ .Values.image.frontend.repository }}:{{ .Values.image.frontend.tag }}"
          resources:
            {{- toYaml .Values.resources.frontend | nindent 12 }}
          imagePullPolicy: {{ .Values.image.blockscout.pullPolicy }}
          ports:
            - name: frontend-http
              containerPort: {{ .Values.service.bs_frontend }}
              protocol: TCP
          env:
{{- include "frontend_env" . | indent 10 }}
          {{- if .Values.readinessProbe.frontend.enable }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.frontend.path }}
              port: frontend-http
              scheme: HTTP
            {{- with .Values.readinessProbe.frontend.params }}
            {{ . | toYaml | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.livenessProbe.frontend.enable }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.frontend.path }}
              port: frontend-http
              scheme: HTTP
            {{- with .Values.livenessProbe.frontend.params }}
            {{ . | toYaml | nindent 12 }}
            {{- end }}
          {{- end }}
      volumes:
        - name: postgredb
        {{- if and .Values.persistence.enabled (not .Values.persistence.hostPath) }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "dojima-blockscout-v2.fullname" . }}{{- end }}
        {{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
          hostPath:
            path: {{ .Values.persistence.hostPath }}
            type: DirectoryOrCreate
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: entrypoint
          emptyDir: {}
        - name: scripts
          configMap:
            name: {{ include "dojima-blockscout-v2.fullname" . }}-scripts
            defaultMode: 0777

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . | toYaml | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
