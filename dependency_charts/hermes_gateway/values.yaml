# Default values for gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

net: testnet

validator: true
midgard: true
rpc:
  enabled: true
  limited: true
api: true

# whitelistIPs contains a list of allowed IP addresses or CIDRs. Defaults to allow all
# traffic if not provided.
whitelistIPs: []

replicaCount: 1

image:
  name: nginx
  tag: 1.21.0-alpine
  hash: cc8c413c74aba9fef9dae7f3da736725136bad1e3f24fbc93788aea1944f51c4

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: LoadBalancer
  port:
    narada:
      p2p: 5040
      api: 6040
    midgard: 8080
    api: 1317
    mainnet:
      p2p: 27146
      rpc: 27147
    stagenet:
      p2p: 27146
      rpc: 27147
    testnet:
      p2p: 26656
      rpc: 26657

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-production
  hosts: []
    # - host: midgard.example.com
    #   paths:
    #   - path: /
    #     backend:
    #       serviceName: gateway
    #       servicePort: midgard
  tls: []
    # - secretName: midgard-tls
    #   hosts:
    #     - midgard.example.com

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  limits:
    cpu: 0.2
    memory: 256Mi
  requests:
    cpu: 0.2
    memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

global:
  images:
    alpineK8s:
      tag: 1.18.2
      hash: sha256:768491682ca99e14498ddb62973a95a664a0525ca18e7ad0eaab2621d3124f5b
