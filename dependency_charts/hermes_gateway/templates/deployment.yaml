apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gateway.fullname" . }}
  labels:
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gateway.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "gateway.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: init-external-ip
        image: alpine/k8s:{{ .Values.global.images.alpineK8s.tag }}@sha256:{{ .Values.global.images.alpineK8s.hash }}
        command: ['/scripts/external-ip.sh', 'false', '{{ include "gateway.fullname" . }}', '{{ include "gateway.fullname" . }}-external-ip']
        volumeMounts:
        - name: config
          mountPath: /scripts
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}@sha256:{{ .Values.image.hash }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            name: config
          ports:
            - name: narada-api
              containerPort: {{ .Values.service.port.narada.api }}
              protocol: TCP
            - name: narada-p2p
              containerPort: {{ .Values.service.port.narada.p2p }}
              protocol: TCP
            - name: midgard
              containerPort: {{ .Values.service.port.midgard }}
              protocol: TCP
            - name: api
              containerPort: {{ .Values.service.port.api }}
              protocol: TCP
            - name: rpc
              containerPort: {{ include "gateway.rpc" . }}
              protocol: TCP
            - name: p2p
              containerPort: {{ include "gateway.p2p" . }}
              protocol: TCP
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: config
        configMap:
          name: {{ include "gateway.fullname" . }}
          defaultMode: 0777
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
