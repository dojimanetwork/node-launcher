# Default values for binance-daemon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

net: testnet

replicaCount: 1

image:
  name: 576263512135.dkr.ecr.ap-south-1.amazonaws.com/dojima-landing-page
  testnet: "testnet-0.1.43-2023-04-05"
  mainnet: ""
  testnet_hash: "497d90c9722d2ef88ee298a987b12db74c76427a6901ff4fab4113c17acc35e7"
  mainnet_hash: ""

imagePullSecrets: []
nameOverride: "landing-paged"
fullnameOverride: "landing-paged"

recoverNineRealmsSnapshot: false

env:
  dojima_wallet_url: https://wallet.dojima.network/wallet/get-started
  dojima_network_logo: https://dojima-brand-images.s3.ap-south-1.amazonaws.com/dojimanetworklogo.zip
  dojima_token_logo: https://dojima-brand-images.s3.ap-south-1.amazonaws.com/dojimalogo.zip
  api_key: "AIzaSyD8G0kzD9SKcRUK5UCkRgMq71L43hDwDmI"
  auth_domain: "dojimaweb-799a1.firebaseapp.com"
  database_url: "https://dojimaweb-799a1-default-rtdb.firebaseio.com"
  project_id: "dojimaweb-799a1"
  storage_bucket: "dojimaweb-799a1.appspot.com"
  messaging_sender_id: "300195518032"
  app_id: "1:300195518032:web:b0d7e807fdd68f6a37e355"
  measurement_id: "G-F1LQMBSKPN"
  generate_sourcemap: false

service:
  type: ClusterIP
  port:
    testnet:
      http: 80
    stagenet:
      http: 80
    mainnet:
      http: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-production
  hosts: []
    # - host: midgard.example.com
    #   paths:
    #   - path: /
    #     backend:
    #       serviceName: gateway
    #       servicePort: midgard
  tls: []
    # - secretName: midgard-tls
    #   hosts:
    #     - midgard.example.com

persistence:
  enabled: false
  size:
    testnet: 50Gi
    stagenet: 500Gi
    mainnet: 500Gi
  accessMode: ReadWriteOnce
  # storageClass: "-"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "serv-frontend-landing-page"

podSecurityContext:
  fsGroup: 1000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  requests:
    cpu: 1
    memory: 2Gi
  limits:
#     cpu: 2
    memory: 3Gi

nodeSelector: {}

tolerations: []

affinity: {}


global:
  tag:
  net: testnet
  peer:
  passwordSecret:
  mnemonicSecret:
  gateway:
    enabled: false
    name: "frontend-gateway"
  images:
    alpineK8s:
      tag: 1.18.2
      hash: 768491682ca99e14498ddb62973a95a664a0525ca18e7ad0eaab2621d3124f5b
    busybox:
      tag: latest
      hash: caa382c432891547782ce7140fb3b7304613d3b0438834dce1cad68896ab110a

