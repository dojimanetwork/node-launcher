apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "narada-eddsa.fullname" . }}
  labels:
    {{- include "narada-eddsa.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.strategyType }}
  selector:
    matchLabels:
      {{- include "narada-eddsa.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "narada-eddsa.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '9000'
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "narada-eddsa.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}

      initContainers:
      - name: init-external-ip
        image: "alpine/k8s:{{ .Values.global.images.alpineK8s.tag }}@sha256:{{ .Values.global.images.alpineK8s.hash }}"
        {{- if .Values.global.gateway.enabled }}
        command: ['/scripts/external-ip.sh', 'false', '{{ .Values.global.gateway.name }}', '{{ include "narada-eddsa.fullname" . }}-external-ip']
        {{- else }}
        command: ['/scripts/external-ip.sh', 'false', '{{ include "narada-eddsa.fullname" . }}', '{{ include "narada-eddsa.fullname" . }}-external-ip']
        {{- end }}
        volumeMounts:
        - name: scripts
          mountPath: /scripts
      - name: init-keepalive
        image: "busybox:{{ .Values.global.images.busybox.tag }}@sha256:{{ .Values.global.images.busybox.hash }}"
        command:
        - /bin/sh
        - -c
        - |
          sysctl -w net.ipv4.tcp_keepalive_time=120
          sysctl -w net.ipv4.tcp_keepalive_intvl=60
          sysctl -w net.ipv4.tcp_keepalive_probes=3
        securityContext:
          privileged: true
      - name: init-hermeschain
        image: "busybox:{{ .Values.global.images.busybox.tag }}@sha256:{{ .Values.global.images.busybox.hash }}"
        command: ['sh', '-c', 'until nc -zv {{ .Values.hermesApi }}; do echo waiting for hermesnode; sleep 2; done']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "narada-eddsa.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/scripts/narada.sh"]
          args: ["tss-eddsa", "-c", "/etc/narada/config.json", "-l",  {{ default "info" .Values.narada_log_level }} ]
          volumeMounts:
            - mountPath: /var/data/narada-eddsa
              name: data
              subPath: data
            - mountPath: /root/.hermesnode
              name: data
              subPath: hermesnode
            - mountPath: /etc/narada
              name: data
              subPath: etc
          env:
            - name: EXTERNAL_IP
              valueFrom:
                configMapKeyRef:
                  name: {{ include "narada-eddsa.fullname" . }}-external-ip
                  key: externalIP
            - name: VALIDATOR
              value: "true"
            - name: NET
              value: {{ include "narada-eddsa.net" . }}
            - name: CHAIN_API
              value: {{ .Values.hermesApi }}
            - name: CHAIN_RPC
              value: {{ include "narada-eddsa.hermesnodeDaemon" . }}
            - name: BINANCE_HOST
              value: {{ include "narada-eddsa.binanceDaemon" . }}
            - name: BINANCE_START_BLOCK_HEIGHT
              value: "{{ .Values.binanceDaemon.binanceStartBlockHeight }}"
            - name: BTC_HOST
              value: {{ include "narada-eddsa.bitcoinDaemon" . }}
            - name: BTC_START_BLOCK_HEIGHT
              value: "{{ .Values.bitcoinDaemon.bitcoinStartBlockHeight }}"
            - name: AR_HOST
              value: {{ include "narada-eddsa.arweaveDaemon" . }}
            - name: AR_START_BLOCK_HEIGHT
              value: "{{ .Values.arweaveDaemon.arweaveStartBlockHeight }}"
            - name: DOT_HOST
              value: {{ include "narada-eddsa.polkaDaemon" . }}
            - name: DOT_START_BLOCK_HEIGHT
              value: "{{ .Values.polkaDaemmon.polkaStartBlockHeight }}"
            - name: SOL_HOST
              value: {{ include "narada-eddsa.solanaDaemon" . }}
            - name: SOL_HOST_WS
              value: {{ include "narada-eddsa.solanaWsDaemon" . }}
            - name: SOL_START_BLOCK_HEIGHT
              value: "{{ .Values.solanaDaemon.solanaStartBlockHeight }}"
            - name: GAIA_HOST
              value: {{ include "narada-eddsa.gaiaDaemon" . }}
            - name: GAIA_GRPC_HOST
              value: {{ include "narada-eddsa.gaiaDaemonGRPC" . }}
            - name: GAIA_GRPC_TLS
              value: "{{ include "narada-eddsa.gaiaDaemonGRPCTLS" . }}"
            - name: GAIA_START_BLOCK_HEIGHT
              value: "{{ .Values.gaiaDaemon.gaiaStartBlockHeight }}"
            - name: CHAIN_HOME_FOLDER
              value: {{ .Values.chain_home_folder }}
            {{- if not .Values.gaiaDaemon.enabled }}
            - name: GAIA_DISABLED
              value: "true"
            {{- end}}
            - name: ETH_HOST
              value: {{ include "narada.ethereumDaemon" . }}
            - name: ETH_START_BLOCK_HEIGHT
              value: "{{ .Values.ethereumDaemon.ethereumStartBlockHeight }}"
            - name: ETH_SUGGESTED_FEE_VERSION
              value: '{{ include "narada.ethSuggestedFeeVersion" . }}'
            - name: PEER
              value: {{ .Values.peer }}
            - name: SEED
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SIGNER_NAME
              value: {{ .Values.signer.name }}
            - name: SIGNER_PASSWD
               {{- if default .Values.signer.passwordSecret .Values.global.passwordSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ default .Values.signer.passwordSecret .Values.global.passwordSecret }}
                  key: password
               {{- else}}
              value: {{ .Values.signer.password }}
               {{- end }}
            {{- if default .Values.signer.mnemonicSecret .Values.global.mnemonicSecret }}
            - name: SIGNER_SEED_PHRASE
              valueFrom:
                secretKeyRef:
                  name: {{ default .Values.signer.mnemonicSecret .Values.global.mnemonicSecret }}
                  key: mnemonic
            {{- end }}
            - name: CHAIN_ID
              value: {{ include "narada.chainID" . }}
            - name: AR_KEY_PATH
              value: "/scripts/testnet/arweave_testnet/2txTDSdb_RjG12uHZlVsB5jrfPzqxtzScKTtPef2KZ0.json"
            - name: AR_ADDRESS
              value: "2txTDSdb_RjG12uHZlVsB5jrfPzqxtzScKTtPef2KZ0"
            - name: SOL_KEYPATH
              value: "/scripts/testnet/solana_testnet/82iP5jLLyiuTHbQRrSwUgZ6sKycT2mjbNkncgpm7Duvg.json"
            - name: SOL_PUBKEY
              value: "82iP5jLLyiuTHbQRrSwUgZ6sKycT2mjbNkncgpm7Duvg"
            - name: DOT_ADDRESS
              value: "5H16DLfWFLdpm5C4f9Qr6UkADsT1PtD9jELWF9WKuiC7St1T"
            - name: DB_PATH
              value: /var/data
            - name: PREPARAM
              value: {{ .Values.preparam }}
            - name: DOJIMA_CHAIN_ID
              value: {{ .Values.dojima_chain.chain_id | quote }}
            - name: DOJIMA_RPC_URL
              value: {{ .Values.dojima_chain.rpc_url | quote }}
            - name: DOJIMA_GRPC_URL
              value: {{ .Values.dojima_chain.grpc_url | quote }}
            - name: SOL_PROGRAM
              value: "2dkwKCkTQz4xXxyjcvhUYdSb5fb3Bw15ra95o94WkyVo"
            {{- range $key, $value := .Values.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: tss-p2p
              containerPort: {{ .Values.service.port.tss_p2p }}
              protocol: TCP
            - name: p2p-id
              containerPort: {{ .Values.service.port.p2p_id }}
              protocol: TCP
            - name: prometheus
              containerPort: {{ .Values.service.port.prometheus}}
              protocol: TCP
            - name: eddsa-http
              containerPort: {{ include "narada-eddsa-nqs.port" .}}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      volumes:
      - name: data
      {{- if and .Values.persistence.enabled (not .Values.persistence.hostPath) }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "narada.fullname" . }}{{- end }}
      {{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
        hostPath:
          path: {{ .Values.persistence.hostPath }}
          type: DirectoryOrCreate
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: scripts
        configMap:
          name: {{ include "narada-eddsa.fullname" . }}-scripts
          defaultMode: 0777
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
