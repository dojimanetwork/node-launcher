# Default values for hermes node

net: testnet
type: genesis

autoupdate:
  enable: false
  nodes:

chain_home_folder: "~/.hermes"
ar_key_path: "/Users/luffybhaagi/dojima/ar-contracts/wallet-1.json"
ar_address: "2txTDSdb_RjG12uHZlVsB5jrfPzqxtzScKTtPef2KZ0"

signer:
  name: hermesnode
  password: password
  mnemonicSecret: "password"
  passwordSecret: "password"

peer:
seeds:
peerApi:
ethRouterContract:
  testnet: "0xefA28233838f46a80AaaC8c309077a9ba70D123A"

statesync:
  enabled: false
  seed: false
  trustHeight: 0
  trustHash: ""
  rpcServers:
  peer: ""

enableApi: true

debug: true

chainID:
  testnet: "hermes-testnet"

haltHeight: false

replicaCount: 1

strategyType: Recreate

image:
  repository: 576263512135.dkr.ecr.ap-south-1.amazonaws.com/hermes/hermes-node
  tag: testnet-1.89.0_4
  hash: sha256:19357adb82b591210954b366967b9575e4d024916eb6bf686af44ddfa013175c
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: "hermesnode-hermes"
fullnameOverride: "fhermesnode-hermes"

service:
  type: "ClusterIP"
  port:
    api: 1317
    testnet:
      p2p: 26656
      rpc: 26657

persistence:
  enabled: true
  size:
    testnet: 300Gi
  accessMode: ReadWriteOnce

serviceAccount:
  create: true
  name: "serv-node-hermes"

priorityClassName: ""

podSecurityContext: {}

securityContext: {}

resources:
  requests:
    cpu: 4
    memory: 4Gi
  limits:

nodeSelector: {}

tolerations: []

affinity: {}

global:
  tag:
  net: testnet
  peer:
  passwordSecret:
  mnemonicSecret:
  gateway:
    enabled: false
    name: "hermesnode-gateway"
  images:
    alpineK8s:
      tag: 1.18.2
      hash: 768491682ca99e14498ddb62973a95a664a0525ca18e7ad0eaab2621d3124f5b
    busybox:
      tag: latest
      hash: caa382c432891547782ce7140fb3b7304613d3b0438834dce1cad68896ab110a


