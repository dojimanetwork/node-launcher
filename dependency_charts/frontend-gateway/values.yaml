# Default values for gateway.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

net: mainnet


# whitelistIPs contains a list of allowed IP addresses or CIDRs. Defaults to allow all
# traffic if not provided.
whitelistIPs: []

replicaCount: 1

image:
  name: nginx
  tag: 1.21.0-alpine
  hash: cc8c413c74aba9fef9dae7f3da736725136bad1e3f24fbc93788aea1944f51c4

imagePullSecrets: []
# used for gateway.name
nameOverride: "frontend-gateway"
# used for gateway.fullname
fullnameOverride: "f-frontend-gateway"

domain:
  landing_page:
    testnet: www-test.dojima.network
    mainnet: www.domain.network
    enable: true
  dojima_wallet:
    testnet: wallet-test.dojima.network
    mainnet: wallet.dojima.network
    enable: false
  block_explorer:
    testnet: hermes-bex-test.dojima.network
    mainnet: bex.dojima.network
    enable: true
  developer_doc:
    testnet: devoc-test.dojima.network
    mainnet: devoc.dojima.network
    enable: true
  faas:
    testnet: faas-test.dojima.network
    mainnet: faas.dojima.network
    enable: true
  blockscout:
    testnet: doj-bex-test.dojima.network
    mainnet: doj-bex.dojima.network
    enable: true
  kubecost:
    testnet: kubecost-test.dojima.network
    enable: false
  v2_blockscout:
    testnet: v2-doj-bex-test.dojima.network
    mainnet: v2-doj-bex.dojima.network
    enable: true
  v2_blockscout_stats:
    testnet: stats-bex-test.dojima.network
    mainnet: stats-bex.dojima.network
    enable: true

service:
  type: LoadBalancer
  port:
    landing_page:
      http: 3002
    dojima_wallet:
      http: 81
    dojima_explorer:
      http: 82
    developer_docs:
      http: 83
    faas:
      http: 3000
    bs:
      http: 4000
    kubecost:
      http: 9090
    v2_bs:
      backend: 4002
      frontend: 3004
      stats: 8053

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "serv-frontend-gateway"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-production
  hosts: []
    # - host: midgard.example.com
    #   paths:
    #   - path: /
    #     backend:
    #       serviceName: gateway
    #       servicePort: midgard
  tls: []
    # - secretName: midgard-tls
    #   hosts:
    #     - midgard.example.com

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  limits:
    cpu: 0.1
    memory: 100Mi
  requests:
    cpu: 0.01
    memory: 20Mi

nodeSelector: {}

tolerations: []

affinity:
#  nodeAffinity:
#    requiredDuringSchedulingIgnoredDuringExecution:
#      nodeSelectorTerms:
#        - matchExpressions:
#            - key: topology.kubernetes.io/zone
#              operator: In
#              values:
#                - ap-south-1b

global:
  net:
  images:
    alpineK8s:
      tag: 1.18.2
      hash: sha256:768491682ca99e14498ddb62973a95a664a0525ca18e7ad0eaab2621d3124f5b
