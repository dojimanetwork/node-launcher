# Default values for ethereum-daemon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

net: testnet

replicaCount: 1

image:
  blockscout:
    repository: blockscout/blockscout
    pullPolicy: IfNotPresent
    tag: frontend-main
  postgres:
    image: postgres:14

env:
  pg_pass: ""
  pg_user: postgres
  pg_host_auth_method: 'trust'
  eth_json_var: geth
  coin: DOJ
  chain_id: 1001
  eth_json_http: http://hermesnode-test.dojima-chain:8545
  database_url: "postgresql://postgres:@localhost:5432/blockscout"
  secret_key: YUt2Iifi/4q7envZCRZZhyCcfgmcfGr26/Uk6Jkc/YCXPNJIORS0Wb1DaejWKaeC
  env: dev

imagePullSecrets: []
nameOverride: "dojima-blockscoutd"
fullnameOverride: "fdojima-blockscoutd"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "serv-dojima-blockscout"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5432

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-production
  hosts: []
    # - host: midgard.example.com
    #   paths:
    #   - path: /
    #     backend:
    #       serviceName: gateway
    #       servicePort: midgard
  tls: []
    # - secretName: midgard-tls
    #   hosts:
    #     - midgard.example.com

persistence:
  enabled: true
  size:
    testnet: 100Gi
    stagenet: 150Gi
    mainnet: 200Gi
  accessMode: ReadWriteOnce
  # storageClass: "-"
  #
resources:
  limits:
    # cpu: 1
    memory: 6Gi
  requests:
    cpu: 2
    memory: 4Gi

nodeSelector: {}

tolerations: []

affinity: {}

# necessary for lint
global:
  images:
    alpine:
      tag: foo
      hash: bar
