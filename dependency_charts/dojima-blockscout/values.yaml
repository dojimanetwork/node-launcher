# Default values for ethereum-daemon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

net: testnet

replicaCount: 1

image:
  blockscout:
    repository: 576263512135.dkr.ecr.ap-south-1.amazonaws.com/dojima-blockscout
    pullPolicy: IfNotPresent
    tag: "testnet-0.1.0-2023-01-03"
    hash: "sha256:1fd230e8d849cc401a978f2d2378f368d3d9b581688ad21fb21f2fb7c3234ae8"
  postgres:
    image: postgres:13.4

env:
  pg_pass: ""
  pg_user: postgres
  pg_host_auth_method: 'trust'
  eth_json_var: geth
  coin: DOJ
  chain_id: 1001
  eth_json_http: http://dojima-chain.hermesnode-test:8545
  eth_ws_url: ws://dojima-chain.hermesnode-test:8545/ws
  eth_jsonrpc_transport: http
  database_url: "postgresql://postgres:@localhost:5432/postgres?ssl=false"
  secret_key: YUt2Iifi/4q7envZCRZZhyCcfgmcfGr26/Uk6Jkc/YCXPNJIORS0Wb1DaejWKaeC
  mix_env: dev
  ecto_use_ssl: false
  trace_first_block: 221443
  indexer_dis_pending_fetcher: true
  indexer_dis_internal_tx_fetcher: true
  indexer_dis_block_rew_fetcher: true
  network: "(Dojima Network)"
  sub_network: "Dojima chain"
  coin_name: DOJ
  cache_tx_count_period: 7200
  cache_block_count_period: 7200
  pool_size: 120
  pool_size_api: 400
  link_other_bex: true
  other_explorers: "{ 'Hermes': 'https://bex-test.h4s.dojima.network' }"
  show_price_chart: true
  show_txs_chart: true
  history_fetch_interval: 240
  txs_stats_days_to_compile_at_init: 10
  coin_balance_history_days: 90
  apps_menu: true
  display_token_icons: true
  api_rate_limit: 100
  api_rate_limit_by_key: 30
  api_rate_limit_by_ip: 30
  indexer_memory_limit: 7
  enable_tx_stats: true
  disable_exchange_rate: true
  logo: /images/doj.svg
  logo_footer: /images/doj.svg

imagePullSecrets: []
nameOverride: "dojima-blockscoutd"
fullnameOverride: "fdojima-blockscoutd"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "serv-dojima-blockscout"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  postgres: 5432
  bs: 4000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-production
  hosts: []
    # - host: midgard.example.com
    #   paths:
    #   - path: /
    #     backend:
    #       serviceName: gateway
    #       servicePort: midgard
  tls: []
    # - secretName: midgard-tls
    #   hosts:
    #     - midgard.example.com

persistence:
  enabled: true
  size:
    testnet: 100Gi
    stagenet: 150Gi
    mainnet: 200Gi
  accessMode: ReadWriteOnce
  # storageClass: "-"
  #
resources:
  limits:
    # cpu: 1
    memory: 18Gi
  requests:
    cpu: 4
    memory: 8Gi

nodeSelector: {}

tolerations: []

affinity: {}

# necessary for lint
global:
  images:
    alpine:
      tag: foo
      hash: bar
