apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "solana-daemon.fullname" . }}
  labels:
    {{- include "solana-daemon.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "solana-daemon.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "solana-daemon.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "solana-daemon.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-external-ip
          image: "alpine/k8s:{{ .Values.global.images.alpineK8s.tag }}@sha256:{{ .Values.global.images.alpineK8s.hash }}"
          {{- if .Values.global.gateway.enabled }}
          command: [ '/scripts/external-ip.sh', 'false', '{{ .Values.global.gateway.name }}', '{{ include "solana-daemon.fullname" . }}-external-ip' ]
          {{- else }}
          command: [ '/scripts/external-ip.sh', 'false', '{{ include "solana-daemon.fullname" . }}', '{{ include "solana-daemon.fullname" . }}-external-ip' ]
          {{- end }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "solana-daemon.image" . }}
          imagePullPolicy: IfNotPresent
          command:
            - solana-test-validator
            - --ticks-per-slot=192
            - --ledger=/data/.solana-test
            - --limit-ledger-size=100000
            - --bpf-program
            - "2dkwKCkTQz4xXxyjcvhUYdSb5fb3Bw15ra95o94WkyVo"
            - "/solana-anchor/dojima.so"
          ports:
            - name: rpc
              containerPort: {{ include "solana-daemon.rpc" . }}
              protocol: TCP
            - name: ws
              containerPort: {{ include "solana-daemon.ws" . }}
              protocol: TCP
            - name: udp
              containerPort: {{ include "solana-daemon.udp" . }}
              protocol: UDP
            - name: gossip
              containerPort: {{ include "solana-daemon.gossip" . }}
              protocol: TCP
            - name: tpu
              containerPort: {{ include "solana-daemon.tpu" . }}
              protocol: TCP
          volumeMounts:
            - mountPath: /scripts
              name: scripts
            - name: data
              mountPath: /data
          resources:
          {{- if not (eq (include "solana-daemon.net" . ) "mocknet") }}
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
      volumes:
      - name: data
      {{- if and .Values.persistence.enabled (not .Values.persistence.hostPath) }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "solana-daemon.fullname" . }}{{- end }}
      {{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
        hostPath:
          path: {{ .Values.persistence.hostPath }}
          type: DirectoryOrCreate
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: scripts
        configMap:
          name: {{ include "solana-daemon.fullname" . }}-scripts
          defaultMode: 0777
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
