apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bex-single-msg.fullname" . }}
  labels:
    {{- include "bex-single-msg.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "bex-single-msg.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "bex-single-msg.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "bex-single-msg.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-external-ip
          image: "alpine/k8s:{{ .Values.global.images.alpineK8s.tag }}@sha256:{{ .Values.global.images.alpineK8s.hash }}"
          {{- if .Values.global.gateway.enabled }}
          command: [ '/scripts/external-ip.sh', 'false', '{{ .Values.global.gateway.name }}', '{{ include "bex-single-msg.fullname" . }}-external-ip' ]
          {{- else }}
          command: [ '/scripts/external-ip.sh', 'false', '{{ include "bex-single-msg.fullname" . }}', '{{ include "bex-single-msg.fullname" . }}-external-ip' ]
          {{- end }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
      containers:
        - name: bex-postgres
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "bex-single-msg-postgres.image" . }}
          args:
            - -c
            - max_connections=20000
            - -c
            - shared_buffers=1024MB
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: scripts
              mountPath: /scripts
          env:
            - name: POSTGRES_PASSWORD
              value: {{ .Values.env.pg_pass }}
            - name: POSTGRES_USER
              value: {{ .Values.env.pg_user }}
            - name: POSTGRES_HOST_AUTH_METHOD
              value: {{ .Values.env.pg_host_auth_method }}
            - name: PGDATA
              value: /var/lib/postgresql/data/bex-hermes
          ports:
            - name: postgres
              containerPort: {{ .Values.service.postgres }}
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - psql
                - -U
                - {{ .Values.env.pg_user }}
                - -d
                - {{ .Values.env.pg_db_name }}
                - -c
                - "SELECT 1"
            timeoutSeconds: 2
            initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: bex-fiber
          image: {{ include "bex-single-msg.image" . }}
          imagePullPolicy: IfNotPresent
          command: ["/bs-scripts/narada.sh", "bs-fiber"]
          volumeMounts:
            - name: data
              mountPath: /root
            - name: scripts
              mountPath: /scripts
          env:
            - name: POSTGRES_DB_HOST
              value: {{ .Values.env.pg_host }}
            - name: POSTGRES_DB_NAME
              value: {{ .Values.env.pg_db_name }}
            - name: POSTGRES_DB_USER
              value: {{ .Values.env.pg_user }}
            - name: POSTGRES_DB_PASSWD
              value: {{ .Values.env.pg_pass }}
            - name: POSTGRES_DB_PORT
              value: {{ .Values.service.postgres | quote }}
            - name: MONGO_DB_URI
              value: {{ .Values.env.mongo_uri }}
            - name: BS_FIBER_PORT
              value: {{ .Values.service.fiber | quote }}
          ports:
            - name: fiber-port
              containerPort: {{ include "bex-single-msg.api" . }}
              protocol: TCP
          readinessProbe:
            timeoutSeconds: 10
            httpGet:
              path: /api/v1/ping
              port: fiber-port
        - name: {{ .Chart.Name }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "bex-single-msg.image" . }}
          command: [ "/bs-scripts/narada.sh", "bs-single-msg", "-c", "/etc/block-explorer/config.json", "-l", "debug" ]
          imagePullPolicy: IfNotPresent
          env:
            - name: MONGO_DB_URI
              value: {{ .Values.env.mongo_uri }}
            - name: D11K_HOST
              value: "{{ .Values.env.hermes_host }}"
            - name: D11K_GRPC_HOST
              value: "{{ .Values.env.hermes_grpc_host }}"
            - name: CHAIN_HOME_FOLDER
              value: {{ .Values.chain_home_folder }}
            - name: SIGNER_NAME
              value: {{ .Values.signer.name }}
            - name: SIGNER_PASSWD
              value: {{ .Values.signer.password }}
            - name: SIGNER_SEED_PHRASE
              value: "{{ .Values.signer.signer_seed_phrase }}"
            - name: D11K_START_BLOCK_HEIGHT
              value: "{{ .Values.env.start_block_height }}"
            - name: CHAIN_ID
              value: "{{ include "bex-hermes.chainID" . }}"
            - name: BS_FIBER_PORT
              value: {{ .Values.service.fiber | quote }}
            - name: BS_FIBER_HOST
              value: {{ .Values.env.bs_fiber_host | quote }}
          readinessProbe:
            timeoutSeconds: 10
            httpGet:
              path: /ping
              port: hermes-health
          ports:
            - containerPort: {{ .Values.service.single_msg_health }}
              name: hermes-health
              protocol: TCP
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - mountPath: /var/data/block-explorer
              name: data
              subPath: data
            - mountPath: /etc/block-explorer
              name: data
              subPath: etc
            - mountPath: /root
              name: data
      volumes:
      - name: data
      {{- if and .Values.persistence.enabled (not .Values.persistence.hostPath) }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "bex-single-msg.fullname" . }}{{- end }}
      {{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
        hostPath:
          path: {{ .Values.persistence.hostPath }}
          type: DirectoryOrCreate
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: scripts
        configMap:
          name: {{ include "bex-single-msg.fullname" . }}-scripts
          defaultMode: 0777
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
