apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "avalanche-daemon.fullname" . }}
  labels:
    {{- include "avalanche-daemon.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "avalanche-daemon.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        network-policy: external-egress-only
        {{- include "avalanche-daemon.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}

      serviceAccountName: {{ include "avalanche-daemon.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.name }}:{{ include "daemon.tag" . }}@sha256:{{ .Values.image.hash }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: data
              mountPath: /root/.avalanchego
            - name: chain-configs
              mountPath: /root/.avalanchego/configs/chains/C/config.json
              subPath: C-config.json
          ports:
            - name: rpc
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          startupProbe:
            periodSeconds: 10
            timeoutSeconds: 10
            httpGet:
              path: /ext/health/liveness
              port: rpc
          livenessProbe:
            periodSeconds: 10
            timeoutSeconds: 10
            httpGet:
              path: /ext/health/liveness
              port: rpc
          readinessProbe:
            periodSeconds: 30  # set this higher to avoid noisy access logs during sync
            timeoutSeconds: 10
            httpGet:
              path: /ext/health
              port: rpc
          command:
            - ./avalanchego
            - --http-host=0.0.0.0
            - --http-allowed-hosts=*
            {{- if eq .Values.net "testnet" }}
            - --network-id=fuji
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      volumes:
        - name: chain-configs
          configMap:
            name: {{ include "avalanche-daemon.fullname" . }}-chain-configs
            defaultMode: 0644
        - name: data
        {{- if and .Values.persistence.enabled (not .Values.persistence.hostPath) }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "avalanche-daemon.fullname" . }}{{- end }}
        {{- else if and .Values.persistence.enabled .Values.persistence.hostPath }}
          hostPath:
            path: {{ .Values.persistence.hostPath }}
            type: DirectoryOrCreate
        {{- else }}
          emptyDir: {}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
